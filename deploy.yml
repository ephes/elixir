- hosts: staging
  vars:
    user: phoenix
    repository_name: elixir

  tasks:
    - include_vars: secrets.yml

    - name: Download erlang base package
      get_url:
        url: https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb
        dest: /opt/erlang-solutions_2.0_all.deb

    - name: Add erlang repository
      apt:
        deb: /opt/erlang-solutions_2.0_all.deb

    - name: Update apt cache after adding erlang repository
      apt: update_cache=yes force_apt_get=yes

    - name: Add the user "{{ user }}" with a bash shell
      user:
        name: "{{ user }}"
        shell: /bin/bash

    - name: Install required erlang packages
      apt:
        name: ["esl-erlang", "elixir"]

    - name: Create a new postgres database with name "{{ phoenix_postgres_database }}"
      community.general.postgresql_db:
        name: "{{ phoenix_postgres_database }}"
        state: present
      become: true
      become_user: postgres

    - name: Create a new postgres user with name "{{ phoenix_postgres_user }}"
      community.general.postgresql_user:
        db: "{{ phoenix_postgres_database }}"
        name: "{{ phoenix_postgres_user }}"
        password: "{{ phoenix_postgres_password }}"
        state: present
      become: true
      become_user: postgres

    - name: Git checkout repository
      git:
        repo: "https://github.com/ephes/{{ repository_name }}"
        dest: "/home/{{ user }}/site"
      become: true
      become_user: "{{ user }}"

    - name: Create .env file
      template:
        src: env.template.j2
        dest: "/home/{{ user }}/site/.env"
        mode: "0600"
      become: true
      become_user: "{{ user }}"

    - name: Install phoenix
      shell: . ./.env && mix local.hex --force
      args:
        chdir: "/home/{{ user }}/site"
      become: true
      become_user: "{{ user }}"

    - name: Get dependencies
      shell: . ./.env && mix deps.get --only prod
      args:
        chdir: "/home/{{ user }}/site"
      become: true
      become_user: "{{ user }}"

    - name: Compile deps
      shell: . ./.env && mix compile
      args:
        chdir: "/home/{{ user }}/site"
      become: true
      become_user: "{{ user }}"

    - name: Install Javascript dependencies
      shell: . ./.env && cd assets && npm install
      args:
        chdir: "/home/{{ user }}/site"
      become: true
      become_user: "{{ user }}"

    - name: Javascript assets
      shell: . ./.env && cd assets && npm run deploy
      args:
        chdir: "/home/{{ user }}/site"
      become: true
      become_user: "{{ user }}"

    - name: Hash assets
      shell: . ./.env && mix phx.digest
      args:
        chdir: "/home/{{ user }}/site"
      become: true
      become_user: "{{ user }}"

    - name: Create a symbolic link for systemd service
      file:
        src: "/home/{{ user }}/site/{{ user }}.service"
        dest: "/etc/systemd/system/{{ user }}.service"
        state: link

    - name: Make sure "{{ user }}" service is running
      systemd:
        state: restarted
        name: "{{ user }}"

    - name: Create a symbolic link for traefik loadbalancer
      file:
        src: "/home/{{ user }}/site/{{ user }}.traefik.yml"
        dest: "/etc/traefik/dynamic/{{ user }}.traefik.yml"
        state: link
